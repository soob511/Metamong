<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mycompany.metamong.daoMain.MemberDao">
	<select id="selectByMId" parameterType="String"
		resultType="Member">
		SELECT
		m_id, m_name, m_password, team_id, m_empid, m_tel,
		m_role, m_isactive,
		prof_filename,
		prof_filetype, prof_filedata,
		m_applydate, m_approval_status, m_regdate
		FROM
		member
		WHERE
		m_id = #{mId} AND
		m_isactive = 1
	</select>

	<insert id="insertJoin" parameterType="Member">
    INSERT INTO member (
        m_id,
        m_name,
        m_password,
        team_id,
        m_empid,
        m_tel,
        m_role,
        m_isactive,
        m_applydate,
        m_approval_status
    ) VALUES (
        #{MId},
        #{MName},
        #{MPassword},
        #{teamId},
        #{MEmpId},
        #{MTel},
        #{MRole},
        1,
        sysdate,
        0
    )
	</insert>

	<select id="selectMId" parameterType="String" resultType="int">
		SELECT count(*)
		FROM member
		WHERE M_Id = #{MId}
	</select>

	<select id="countRows" resultType="int">
		SELECT count(*)
		FROM member
	    WHERE 
           m_role != 'ROLE_ADMIN'
           AND m_approval_status=1
           AND m_isactive = 1
	</select>

	<select id="selectMemberList" parameterType="Pager" resultType="Member">
		    <![CDATA[
		        SELECT
		            rnum, m_id, m_name, REPLACE(m_role, 'ROLE_', '') AS m_role, team_id, team_name, m_empid, m_tel, m_approval_status, m_isactive
		        FROM (
		            SELECT 
		                rownum AS rnum, m.m_id, m.m_name, REPLACE(m.m_role, 'ROLE_', '') AS m_role, m.team_id, t.team_name, m.m_empid, m.m_tel, m.m_approval_status, m.m_isactive
		            FROM 
		                member m
		            LEFT OUTER JOIN 
		                team t ON m.team_id = t.team_id
		            WHERE 
		                m.m_role != 'ROLE_ADMIN'
		                AND m.m_approval_status=1
		                AND m.m_isactive = 1
		            ORDER BY 
		                m.m_name, m.m_id
		        )
		        WHERE rnum BETWEEN #{startRowNo} AND #{endRowNo}
		    ]]>
	</select>
	
	<select id="selectMemberSearch"  resultType="Member" parameterType="Pager">
	    <![CDATA[
		        SELECT
		            rnum, m_id, m_name, REPLACE(m_role, 'ROLE_', '') AS m_role, team_id, team_name, m_empid, m_tel
		        FROM (
		            SELECT 
		                rownum AS rnum, m.m_id, m.m_name, REPLACE(m.m_role, 'ROLE_', '') AS m_role, m.team_id, t.team_name, m.m_empid, m.m_tel
		            FROM 
		                member m
		            LEFT OUTER JOIN 
		                team t ON m.team_id = t.team_id
	          ]]>       
	            <where>
			                <if test="keyword != null and keyword != '' and option == 'ID'">
			                    LOWER(m.M_id) LIKE CONCAT(CONCAT('%', LOWER(#{keyword})), '%')
			                </if>
			                <if test="keyword != null and keyword != '' and option == '이름'">
			                    m.M_name LIKE CONCAT(CONCAT('%', #{keyword}), '%')
			                </if>
			                <if test="keyword != null and keyword != '' and option == '권한'">
			                    LOWER(m.M_role) LIKE CONCAT(CONCAT('%', LOWER(#{keyword})), '%')
			                </if>
			                <if test="keyword != null and keyword != '' and option == '소속'">
			                    t.team_name LIKE CONCAT(CONCAT('%', #{keyword}), '%')
			                </if>
			                <if test="keyword != null and keyword != '' and option == '사번'">
			                    LOWER(m.M_empid) LIKE CONCAT(CONCAT('%', LOWER(#{keyword})), '%')
			                </if>
			                AND m_role != 'ROLE_ADMIN'
				            AND m_approval_status=1
				            AND m_isactive = 1
		            </where>
		            <![CDATA[
				            ORDER BY 
				                m.m_name, m.m_id
				        	)
			        WHERE rnum BETWEEN #{pager.startRowNo} AND #{pager.endRowNo}
	   				 ]]>
	</select>
	
	<select id="selectDbaName" parameterType="String" resultType="String">
		SELECT m_name
		FROM member
		WHERE m_id = #{dbaId}
	</select>
	

	<select id="countMembers" parameterType="Pager" resultType="int">
	    SELECT COUNT(*)
	    	FROM(
	    		SELECT
	    			rownum AS rnum, m.m_id, m.m_name, REPLACE(m.m_role, 'ROLE_', '') AS m_role, m.team_id, t.team_name, m.m_empid, m.m_tel 
			    FROM member m
			    FULL OUTER JOIN team t ON m.team_id = t.team_id
			   <where>
					<if test="keyword != null and keyword != '' and option == 'ID'">
		            LOWER(m.M_id) LIKE CONCAT(CONCAT('%', LOWER(#{keyword})), '%')
		        	</if>
					<if test="keyword != null and keyword != '' and option == '이름'">
						m.M_name LIKE CONCAT(CONCAT('%', #{keyword}), '%')
					</if>
					<if test="keyword != null and keyword != '' and option == '권한'">
		            LOWER(m.M_role) LIKE CONCAT(CONCAT('%', LOWER(#{keyword})), '%')
		        	</if>
					<if test="keyword != null and keyword != '' and option == '소속'">
						t.team_name LIKE CONCAT(CONCAT('%', #{keyword}), '%')
					</if>
					<if test="keyword != null and keyword != '' and option == '사번'">
		            LOWER(m.M_empid) LIKE CONCAT(CONCAT('%', LOWER(#{keyword})), '%')
		        	</if>
					AND m_role != 'ROLE_ADMIN'
		            AND m_approval_status=1
		            AND m_isactive = 1
				</where>
					)
	</select>

	<select id="selectMemberProf" parameterType="String" resultType="Member">
		SELECT 
           m.m_id, m.m_empid,m.m_name, t.team_name, m.prof_filename, m.prof_filetype, m.prof_filedata
        	 FROM 
		                member m
		            LEFT OUTER JOIN 
		                team t ON m.team_id = t.team_id
               WHERE m.M_id = #{MId}
	</select>
	
	<update id="updateProf" parameterType="Member">
		UPDATE member
		SET 
			<if test="profFilename !=null">
				prof_filename = #{profFilename},
				prof_filetype = #{profFiletype},
				prof_filedata = #{profFiledata}
			</if>
			
		WHERE M_id = #{MId}
	</update>
	
	<update id="deleteProf" parameterType="Member">
	    UPDATE member
	    SET 
	    		prof_filename = NULL,
	     		prof_filetype = NULL,
	        	prof_filedata = NULL
	  
	    WHERE M_id = #{MId}
	</update>
</mapper>